import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Context, useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import { UserProps } from "../types";
import { api } from "../util";

export interface HomePageProps {
  users: UserProps[];
}

const Home = ({ users }: HomePageProps) => {

  // const [users, setUsers] = useState<UserProps[]>([]);

  // const fetchUser = async () => {
  //   try {
  //     const response = await api.get("/users");
  //     setUsers(response.data);
  //   } catch (error) {
  //     console.log(error);
  //   }
  // };

  // useEffect(() => {
  //   fetchUser();
  // }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>
          {users.map((user) => (
            <a
              key={user.id}
              href="https://nextjs.org/docs"
              className={styles.card}
            >
              <h2>{user.name} &rarr;</h2>
              <p>{user.email}</p>
              <p>{user.company.catchPhrase}</p>
            </a>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export async function getStaticProps() {
  console.log("GET STATIC PROPS CALLED");
  
  try {
    const response = await api.get("/users");
    return {
      props: {
        users: response.data,
      },
      revalidate: 5,
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
}

export default Home;
